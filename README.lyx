#LyX 1.1 created this file. For more info see http://www.lyx.org/
\lyxformat 218
\textclass amsart
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single 
\papersize Default
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 2
\paperpagestyle default

\layout Title

gqserv - a centralised mechanism for querying google
\layout Author

Aidan Finn
\layout Section

Introduction
\layout Standard

gqserv allows the centralised pooling of google queries and caching of retrieved
 results.
 Queries are submitted to gqserv and queued.
 They are retrieved from google(in xml format) during off-peak hours and
 cached.
 Cached queries are then available to users.
 Interaction with gqserv is through a socket interface.
 There are also command line tools for accessing gqserv: gqclient, gqsubmit
 and gqretrieve.
\layout Section

The socket interface
\layout Standard

gqserv operates as a socket server.
 To use the server directly, the client program must open a socket connection
 to the appropriate port.
 The client then sends a command to the server.
 The server executes the command and returns a status message.
 The first character of the returned message indicated success(1) or failure(0)
 of the command.
\layout Standard

Commands sent to the server are required to be in netstring format
\begin_float footnote 
\layout Standard

http://cr.yp.to/proto/netstrings.txt 
\end_float 
 .
\layout Standard

The format of a netstring is:
\layout LyX-Code

Length:<STRING>,
\layout Standard

Length is the decimal representation in ascii of the number of characters
 in the string.
 A colon follows the length, then comes the actual string and then a terminating
 comma for simple error check.
 So the string 
\layout LyX-Code


\begin_inset Quotes eld
\end_inset 

hello world!
\begin_inset Quotes erd
\end_inset 


\layout Standard

would actually be transmitted as
\layout LyX-Code


\begin_inset Quotes eld
\end_inset 

12:hello world!,
\begin_inset Quotes erd
\end_inset 


\layout Standard

Strings sent to gqserv should be in encoded in netstring format before transmiss
ion and strings received should be decoded from netstring format.
\layout Section

Available Commands
\layout Standard

Commands sent to the server are of the format
\layout LyX-Code

command [keyword1 keyword2 keyword3 ...] [param: parameter1 param: parameter2
 ...]
\layout Standard

command is the actual command to be performed by the server.
 A sequence of keywords makes up the query.
 Optional parameters can be listed after the query.
 The parameters must come after the query.
\layout Standard

The following commands are recognised by the server:
\layout Itemize

add_query
\layout Itemize

add_query_force
\layout Itemize

retrieve_query
\layout Itemize

queue_stat
\layout Itemize

queue_contents
\layout Subsubsection*

add_query
\layout Standard

Adds a query to the gqserv queue.
 E.g.
\layout LyX-Code

add_query hello world param:num=50
\layout Standard

This adds the query 'hello world' to the queue with the google parameter
 num set to 50 to return 50 results.
 When the query is retrieved it is stored in the cache.
\layout Subsubsection*

retrieve_query
\layout Standard

Retrieves a query from the cache if it exists.
 E.g.
\layout LyX-Code

retrieve_query hello world param: num=50
\layout Standard

retrieves the above query from the cache.
 Do not try to access the cache directly.
\layout Subsubsection*

add_query_force
\layout Standard

Same as add_query except that it adds a query to the gqserv queue even if
 it is already in the cache.
\layout Subsubsection*

queue_stat
\layout Standard

Returns some gqserv queue statistics
\layout Subsubsection*

queue_contents
\layout Standard

Returns the currents of the gqserv queue
\layout Section

gqclient
\layout Standard

gqclient is an tool for interactively sending commands to gqserv.
 It has two optional arguments.
\layout LyX-Code

gqclient [-h host] [-p port]
\layout Standard

Here is a sample gqclient session:
\layout LyX-Code

[aidan@smi gqserv]$ ./gqclient.py
\layout LyX-Code

Host: 127.0.0.1
\layout LyX-Code

port: 8081 
\layout LyX-Code

Send: asdas asda 
\layout LyX-Code

Returned: 0 UNKNOWN COMMAND:asdas
\layout LyX-Code

Send: queue_stat 
\layout LyX-Code

Returned: 0 items in queue 
\layout LyX-Code

Send: add_query hello world 
\layout LyX-Code

Returned: 1 ADDED: hello_world_ 
\layout LyX-Code

Send: add_query the hellacopters param: num=50 
\layout LyX-Code

Returned: 1 ADDED: the_hellacopters_param:_num=50_ 
\layout LyX-Code

Send: retrieve_query hello world 
\layout LyX-Code

Returned: 0 QUERY NOT IN CACHE hello_world_ 
\layout LyX-Code

Send: queue_contents 
\layout LyX-Code

Returned: ['hello_world_', 'the_hellacopters_param:_num=50_']
\layout Section

gqsubmit and gqretrieve
\layout Standard

These are command line tools for submitting and retrieving multiple queries.
\layout LyX-Code

gqsubmit [-h hostname] [-p port] filename
\layout LyX-Code

gqretrieve [-h hostname] [-p port] filename
\layout Standard

The input file should contain one query per line.
 Run gqsubmit to submit all the queries in the file to gqserv.
 Running gqretrieve the next day will retrieve all the queries and save
 each one in an individual file in the current directory.
 The filename will be the query with spaces replaced by underscores.
 Here is an example query file:
\layout LyX-Code

the hellacopters 
\layout LyX-Code

monster magnet 
\layout LyX-Code

macos vs linux param: num=50 
\layout LyX-Code

hello world :param num=20 param: start=10 
\layout LyX-Code

liverpool f.c.
 
\layout LyX-Code

i hate man united
\layout Section

Notes
\layout Itemize

Software has not been tested much
\layout Itemize

Server is multithreaded, but has not been load tested
\layout Itemize

File config.py contains gqserv configuration information
\layout Itemize

If in doubt, UTSL (use the source luke...)
\layout Itemize

bug-reports, feature requests to aidan.finn@ucd.ie
\layout Section

TODO
\layout Itemize

Dont assume the page returned by google is ok! Check the headers for errors
 or check that the start is xml.
\layout LyX-Code

\layout LyX-Code

\the_end
